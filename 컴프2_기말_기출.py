# -*- coding: utf-8 -*-
"""컴프2 기말 기출.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rj6nR5sfhp-kfyvursGzP5HE0kxGYaa9

22 - 1

년도 바뀔 때마다 url도 바뀜 => 정적 웹 크롤링
"""

#ex1
#왜 인지는 모르겠지만 코랩에서 url 안불러와짐... idle에서 구동!
import requests
from bs4 import BeautifulSoup

year=input()
rank=int(input())
url='https://www.waternow.go.kr/web/ssdoData/?pMENUID=8&ATTR_1='+year+'&ATTR_5=5'
header_info={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.19582'}
print(url)
page=requests.get(url,headers=header_info)
page=page.text

soup=BeautifulSoup(page,'html.parser')
info=soup.find_all('td')

lis1=[] #lis1=()이면 튜플 만드는 거야...뭐하세요!!!
for i in range(15,18*11,11):
    pass1=info[i-2].text
    if pass1!='한국수자원공사':
        data=info[i]
        data=data.text
        if ',' in data:
            data=data.replace(',','')
        lis1.append(float(data))
lis1.sort(reverse=True)
print(int(lis1[rank-1]))

#ex2 진짜 모르겠다~~~

import pandas as pd

df=pd.read_csv('info.csv')
k=int(input())
flag=1
i=0
while(i<len(df)):
  check=0
  j=0
  while(j<len(df)):
    icheck=list(df.iloc[i,:3])
    jcheck=list(df.iloc[j,:3])
    if (icheck==jcheck):
      check+=1
    j+=1
  if(check<k):
    print('NO')
    flag=0
    break
  i+=1
if(flag==1):
  print('YES')

#ex3
class Player:
  team='TIGERS'

  def __init__(self,avg, hr, age):
    self.avg=avg
    self.hr=hr
    self.age=age

  def sum_player(self,other):
    print(self.hr+ other.hr)

bh=Player(0.378,15,33)
sb=Player(0.359,12,25)
dh=Player(0.315,17,29)

sb.sum_player(dh)

"""22 - 2"""

#ex1
import requests
from bs4 import BeautifulSoup

bookname=input()
url='https://lib.seoul.go.kr/main/searchBrief?st=KWRD&si=TOTAL&sts=Y&lmt0=&searchType=&q='+bookname
header_info={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.19582'}
page=requests.get(url,headers=header_info)
page=page.text
soup=BeautifulSoup(page,'html.parser')

info=soup.find_all('span')
info=info[7].text
if info=='신청가능':
  print('ASK')
elif info=='대출중':
  print('BUSY')
elif info=='대출가능':
  #단서 입력해도 안뽑히면 좀 더 상위 단서(?) 이용하자!?
  loca=soup.find_all('p',class_='location')
  loca=loca[0].text
  loca=loca.strip()
  #자료가 이상하게 나오지만 뭐 어떡해.... 노가다로 뽑아야지
  for i in range(len(loca)):
    if loca[i]=='(':
      floor=loca[i+1]
      print(floor)
      break

#ex2 뭔가 개선 필요해보임...
import pandas as pd

df=pd.read_csv('lecture.csv')

namelis=[]
for i in range(df.shape[0]):
  name=df.iloc[i,0]
  if name in namelis:
    continue
  else:
    namelis.append(name)

scoredict=dict()
scorelis=[]

for item in namelis:
  score=0
  cond=df['name']==item
  df_new=df.loc[cond]
  for i in range(df_new.shape[0]):
    if df_new.iloc[i,1]=='HW':
      if df_new.iloc[i,2]=='Pass':
        score+=20
      else:
        score+=0
    elif df_new.iloc[i,1]=='Mid':
      score+=int(df_new.iloc[i,2])
    elif df_new.iloc[i,1]=='Final':
      score+=int(df_new.iloc[i,2])
    scoredict[item]=score
#왜 그냥 여기서 scorelis.append(score)하면 훨씬 값이 많이 추가되는 걸까?...
#일단 딕셔너리 출력했을 때 잘 나오는 걸 봐서 .values()로 돌면서 점수 추가해줌.

for value in scoredict.values():
  scorelis.append(value)

scorelis.sort(reverse=True)
stu=input()
result=scorelis.index(scoredict[stu])+1

print(result)

"""22 계절"""

#ex1 9:10~
#아 왜 노가다 방법만 떠오르징ㅜ=> 그냥 그거로라도 풀리면 그렇게 풀기
#어차피 2*2*2=8가지 경우자나

def eleven(num1,num2,num3,num4):
  if num1+num2+num3+num4==11:
    return True
  elif num1-num2+num3+num4==11:
    return True
  elif num1+num2-num3+num4==11:
    return True
  elif num1+num2+num3-num4==11:
    return True
  elif num1-num2-num3+num4==11:
    return True
  elif num1-num2+num3-num4==11:
    return True
  elif num1+num2-num3-num4==11:
    return True
  elif num1-num2-num3-num4==11:
    return True
  else:
    return False

eleven(1,1,13,1)

#ex2
import requests
from bs4 import BeautifulSoup

year=input()
month=int(input())
url='https://www.kamis.or.kr/customer/price/product/period.do?action=monthly&yyyy='+year+'&period=3&countycode=&itemcategorycode=100&itemcode=111&kindcode=&productrankcode=1&convert_kg_yn=N'
header_info={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.19582'}

page=requests.get(url,headers=header_info)
page=page.text

lis1=[]
soup=BeautifulSoup(page,'html.parser')

#여차하면 일단 데이터 다 갖고와서... 정제 도전...
costs=soup.find_all('tr')
for item in costs:
  cost=item.text
  lis1.append(cost)
item=lis1[15].strip()
#나처럼 일일히 세는 방법도 있지만... 계산으로 해결하는 방법도 있다.

lis2=[]
lis2=item.split('\n')

del lis2[0]

result=lis2[month-1]
result=result.replace(',','')
print(result)

"""ex2를 동적 웹 크롤링으로 시도했으나...   
클릭으로 저장한 파일이 xls 형태여서 read_excel로 못 불러왔움ㅠㅠ

아 그리고 url에서 period=28로 바꾸면 전체 데이터 다 나옴.
연도 굳이 안바꿔도 괜찮은 방법이 있었다~
"""

#ex3
import pandas as pd
df=pd.read_csv('bicycle.csv')
cutline=int(input())

cond=df['자전거보유대수']>cutline
df_new=df.loc[cond]
print(df_new.shape[0])

"""23 - 1"""

#ex1
import requests
from bs4 import BeautifulSoup

name=input().split()
url='https://baseballhall.org/hall-of-famers/'+name[1]+'-'+name[0]
header_info={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.19582'}

page=requests.get(url,headers=header_info)
page=page.text

soup=BeautifulSoup(page,'html.parser')

games=soup.find_all(class_='outline')
lis1=[]
for item in games:
  time=item.text
  lis1.append(time)
result=lis1[0].replace(',','')
print(result)

playedfors=soup.find_all(class_='h3 text-red')
lis2=[]
for item in playedfors:
  team=item.text
  lis2.append(team)

lis2_new=[]
for i in range(8,len(lis2)):
  if lis2[i]==lis1[0]:
    break
  lis2_new.append(lis2[i])

per_lis=[]
final_lis=[]
for i in range(len(lis2_new)):
  per_lis=lis2_new[i].split(',')
  final_lis.append(per_lis)

numlis=[]
sortlis=[]
for i in range(len(final_lis)):
  final_lis[i][1]=final_lis[i][1].strip()
  numlis=final_lis[i][1].split('-')
  if len(numlis)<2:
    continue
  else:
    year=int(numlis[1])-int(numlis[0])+1
    final_lis[i][1]=year
    sortlis.append(year)

sortlis.sort(reverse=True)
for i in range(len(final_lis)):
  if final_lis[i][1]==sortlis[0]:
    print(final_lis[i][0])

#ex2 16분 남음...
import pandas as pd

df=pd.read_csv('stock.csv')
df=df.sort_values(by='COMPANY',ascending=True)
df=df.reset_index(drop=True)

stops=dict()

for i in range(0,len(df)):
  for j in range(3,df.shape[1]):
    if((int(df.iloc[i,j-1])/int(df.iloc[i,j-2]))<=0.9):
      if(int(df.iloc[i,j]/int(df.iloc[i,j-1]))<=0.9):
        stops[df.iloc[i,0]]=j
        break

day=int(input())

flag=0
for key in stops.keys():
  if (stops[key]<=day):
    flag=1
    print(key,end=' ')
if(flag==0):
  print('NOTHING')